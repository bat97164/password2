name: Docker Container Builds

on:
  push:
    tags:
      - "v*.*.*"

  workflow_dispatch:
    inputs:
      dockerTagName:
        description: 'What Docker tag to create? e.g. development-0xdeadbeef'     
        required: true
        default: 'development-0xdeadbeef'

  schedule:
    # * is a special character in YAML so you have to quote this string
    # Run every day at 5:24 UTC - build 'latest' docker containers
    - cron:  '24 5 * * 0'


jobs:
  pwpush-ephemeral:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - id: get_version
        uses: battila7/get-version-action@v2

      - run: echo "DOCKER_TAG=${{ steps.get_version.outputs.version-without-v }}" >> $GITHUB_ENV

      - name: Figure out docker image tag
        if: ${{ github.ref == 'refs/heads/master' }}
        run: echo "DOCKER_TAG=latest" >> $GITHUB_ENV

      - name: Show us the DOCKER_TAG
        run: echo "${{ env.DOCKER_TAG}}"

      - run: cp ./containers/docker/pwpush-ephemeral/Dockerfile .

      - name: Build and push pwpush-ephemeral Docker images
        uses: docker/build-push-action@v2.7.0
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: pglombardo/pwpush-ephemeral:${{ env.DOCKER_TAG }}

  pwpush-postgres:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - id: get_version
        uses: battila7/get-version-action@v2

      - run: echo "DOCKER_TAG=${{ steps.get_version.outputs.version-without-v }}" >> $GITHUB_ENV

      - name: Figure out docker image tag
        if: ${{ github.ref == 'refs/heads/master' }}
        run: echo "DOCKER_TAG=latest" >> $GITHUB_ENV

      - name: Show us the DOCKER_TAG
        run: echo "${{ env.DOCKER_TAG}}"

      - run: cp ./containers/docker/pwpush-postgres/Dockerfile .

      - name: Build and push pwpush-postgres Docker images
        uses: docker/build-push-action@v2.7.0
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: pglombardo/pwpush-postgres:${{ env.DOCKER_TAG }}

  pwpush-mysql:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - id: get_version
        uses: battila7/get-version-action@v2

      - run: echo "DOCKER_TAG=${{ steps.get_version.outputs.version-without-v }}" >> $GITHUB_ENV

      - name: Figure out docker image tag
        if: ${{ github.ref == 'refs/heads/master' }}
        run: echo "DOCKER_TAG=latest" >> $GITHUB_ENV

      - name: Show us the DOCKER_TAG
        run: echo "${{ env.DOCKER_TAG}}"

      - run: cp ./containers/docker/pwpush-mysql/Dockerfile .

      - name: Build and push pwpush-mysql Docker images
        uses: docker/build-push-action@v2.7.0
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: pglombardo/pwpush-mysql:${{ env.DOCKER_TAG }}
